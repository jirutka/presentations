GAS LISTING macro_labels.s 			page 1


   1              	# asmsyntax=as
   2              	
   3              	# Ukazka pouziti maker v GNU Assembleru - problem s navestimi v makrech
   4              	# - pouzita je "Intel" syntaxe.
   5              	# - zdrojovy kod nelze prelozit (to je v poradku!)
   6              	#
   7              	# Autor: Pavel Tisnovsky
   8              	
   9              	.intel_syntax noprefix
  10              	
  11              	
  12              	# Linux kernel system call table
  13              	sys_exit   = 1
  14              	sys_write  = 4
  15              	
  16              	# Dalsi konstanty pouzite v programu - standardni streamy
  17              	std_input  = 0
  18              	std_output = 1
  19              	
  20              	
  21              	
  22              	#-----------------------------------------------------------------------------
  23              	
  24              	# Deklarace makra pro ukonceni aplikace
  25              	.macro exit
  26              	        mov   eax, sys_exit          # cislo sycallu pro funkci "exit"
  27              	        mov   ebx, 0                 # exit code = 0
  28              	        int   0x80                   # volani Linuxoveho kernelu
  29              	.endm
  30              	
  31              	
  32              	
  33              	# Deklarace makra pro vytisteni zpravy na standardni vystup
  34              	.macro writeMessage message,messageLength
  35              	        mov   ecx, offset \message   # adresa retezce, ktery se ma vytisknout
  36              	        mov   edx, \messageLength    # pocet znaku, ktere se maji vytisknout
  37              	        call  write_message          # vytisknout zpravu "Zero flag not set"
  38              	.endm
  39              	
  40              	
  41              	
  42              	# Deklarace makra pro vytisteni zpravy na standardni vystup
  43              	.macro writeMessageRepeatedly message,messageLength,count
  44              	        mov   ebp, \count            # nastaveni pocitadla
  45              	loop:                                # globalni navesti!!!
  46              	        mov   ecx, offset \message   # adresa retezce, ktery se ma vytisknout
  47              	        mov   edx, \messageLength    # pocet znaku, ktere se maji vytisknout
  48              	        call  write_message          # vytisknout zpravu "Zero flag not set"
  49              	        dec   ebp                    # snizeni hodnoty pocitadla
  50              	        jnz   loop                   # opakovani smycky
  51              	.endm
  52              	
  53              	
  54              	
  55              	#-----------------------------------------------------------------------------
  56              	.section .data
  57              	message1:
GAS LISTING macro_labels.s 			page 2


  58 ???? 48656C6C 	        .string "Hello world\n"
  58      6F20776F 
  58      726C640A 
  58      00
  59              	message1len = $ - message1         # delka prvni zpravy
  60              	
  61              	message2:
  62 ???? 56697465 	        .string "Vitejte na mojefedora.cz\n"
  62      6A746520 
  62      6E61206D 
  62      6F6A6566 
  62      65646F72 
  63              	message2len = $ - message2         # delka druhe zpravy
  64              	
  65              	message3:
  66 ???? 41737365 	        .string "Assembler je fajn\n"
  66      6D626C65 
  66      72206A65 
  66      2066616A 
  66      6E0A00
  67              	message3len = $ - message3         # delka druhe zpravy
  68              	
  69              	
  70              	
  71              	#-----------------------------------------------------------------------------
  72              	.section .bss
  73              	
  74              	
  75              	
  76              	#-----------------------------------------------------------------------------
  77              	.section .text
  78              	        .global _start               # tento symbol ma byt dostupny i linkeru
  79              	
  80              	_start:
  81              	        writeMessageRepeatedly message1,message1len,10
  81 ???? BD0A0000 	>  mov ebp,10
  81      00
  81              	> loop:
  81 ???? B9000000 	>  mov ecx,offset message1
  81      00
  81 ???? BA0D0000 	>  mov edx,message1len
  81      00
  81 ???? E8000000 	>  call write_message
  81      00
  81 ???? 4D       	>  dec ebp
  81 ???? 75       	>  jnz loop
  82              	        writeMessageRepeatedly message2,message2len,2
  82 ???? BD020000 	>  mov ebp,2
  82      00
  82              	> loop:
  82 ???? B9000000 	>  mov ecx,offset message2
  82      00
  82 ???? BA1A0000 	>  mov edx,message2len
  82      00
  82 ???? E8000000 	>  call write_message
  82      00
  82 ???? 4D       	>  dec ebp
GAS LISTING macro_labels.s 			page 3


  82 ???? 75       	>  jnz loop
  83              	        writeMessageRepeatedly message3,message3len,7
  83 ???? BD070000 	>  mov ebp,7
  83      00
  83              	> loop:
  83 ???? B9000000 	>  mov ecx,offset message3
  83      00
  83 ???? BA130000 	>  mov edx,message3len
  83      00
  83 ???? E8000000 	>  call write_message
  83      00
  83 ???? 4D       	>  dec ebp
  83 ???? 75       	>  jnz loop
  84              	        exit                         # ukonceni aplikace
  84 ???? B8010000 	>  mov eax,sys_exit
  84      00
  84 ???? BB000000 	>  mov ebx,0
  84      00
  84 ???? CD80     	>  int 0x80
  85              	
  86              	
  87              	
  88              	# Podprogram pro vytisteni zpravy na standardni vystup
  89              	# Ocekava se, ze v ecx bude adresa zpravy a v edx jeji delka
  90              	write_message:
  91 ???? B8040000 	        mov   eax, sys_write         # cislo syscallu pro funkci "write"
  91      00
  92 ???? BB010000 	        mov   ebx, std_output        # standardni vystup
  92      00
  93 ???? CD80     	        int   0x80
  94 ???? C3       	        ret
  95              	
